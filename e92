clc;
Eb= 1; % Energ per bit
EbNo_dB= 0:5:35 % vary the average SNR
No_over_2= Eb*10.^(-EbNo_dB/10)% Noise power
sigma= 1 ; % Rayleigh parameter
var=sigma^2;
BER= zeros(1,length(EbNo_dB));


% Calculation of error probabilit using Monte Carlo simulation:
for i = 1:length(EbNo_dB)
no_errors = 0;
no_bits = 0;
% Assumption: m = 0 (All zero codeword is transmitted):
while no_errors <= 10
u = rand;
% rand returns a single uniformly distributed 
%random number in the interval (0,1)
alpha = sigma*sqrt(- 2*log(u)) ; % alpha is non-negative
%Rayleigh distrbuted with variance selected to be unity.
noise = sqrt(No_over_2(i))*randn; %randn gives  Gaussian, with zero mean and unit variance
y = alpha*sqrt(Eb) + noise; %simulate the input to the detector
if y <= 0
y_d = 1;
else
y_d = 0;
end
no_bits = no_bits + 1 ;
no_errors = no_errors + y_d;
end
BER(i) = no_errors/no_bits ;%estimated error probability
end
% Calculation of error probabilit using the theoretical formula:
rho_b = Eb./No_over_2*var;
P2 = 1/2*(1-sqrt(rho_b./(1+rho_b))); %the theoretical value
% Plot the results:
semilogy(EbNo_dB,BER, '-* ' ,EbNo_dB, P2,'-o')
title('Montecarlosimualtion for Performance of BPSK signal');
xlabel('Average SNR/bit (dB)')
ylabel('Error Probability')
legend('Monte Carlo simulation','Theoretical value')
